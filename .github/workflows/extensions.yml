name: Extension Workflow

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  simple-extension-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as 'changes' output variable
      changes: ${{ steps.changes.outputs.changes }}

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            reaper: extensions/reaper/**
            integration-session-manager: extensions/integration-session-manager/**

  simple-extensions:
    needs: [simple-extension-changes]
    if: ${{ needs.simple-extension-changes.outputs.changes != '[]' && needs.simple-extension-changes.outputs.changes != '' }}
    strategy:
      # Do not fail fast so all extensions are processed
      fail-fast: false
      matrix:
        # Parse JSON containing names of all filters matching any of changed extensions
        # e.g. ['reaper'] if the reaper extension dir changed
        extension: ${{ fromJSON(needs.simple-extension-changes.outputs.changes) }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/package-extension
        with:
          extension-name: ${{ matrix.extension }}

      - uses: ./.github/actions/release-extension
        with:
          extension-name: ${{ matrix.extension }}

  complex-extension-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      publisher-command-center: ${{ steps.changes.outputs.publisher-command-center }}

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            publisher-command-center: extensions/publisher-command-center/**

  publisher-command-center:
    needs: [complex-extension-changes]
    if: ${{ needs.complex-extension-changes.outputs.publisher-command-center == 'true'}}
    runs-on: ubuntu-latest

    steps:
      - run: echo "Publisher Command Center"

  update-extension-list:
    runs-on: ubuntu-latest
    needs: [simple-extensions, publisher-command-center]

    if: ${{ always() }}
    steps:
      - run: echo ${{ toJSON(needs.simple-extensions.outputs) }}
