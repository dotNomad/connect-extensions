name: Check if extension should be released

on:
  workflow_call:
    inputs:
      extension-name:
        description: "The name of the extension"
        required: true
        type: string
    secrets:
      GH_TOKEN:
        description: "GitHub token"
        required: true
    outputs:
      manifest:
        description: "The manifest of the extension"
        value: ${{ jobs.should_release.outputs.manifest }}
      should-release:
        description: "Whether the extension should be released"
        value: ${{ jobs.should_release.outputs.should-release }}
      version:
        description: "The version of the extension to be released"
        value: ${{ jobs.should_release.outputs.version }}

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  should_release:
    if: contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) && github.ref_name == 'main'
    runs-on: ubuntu-latest
    outputs:
      manifest: ${{ steps.get_manifest.outputs.manifest }}
      should-release: ${{ steps.should_release.outputs.should_release }}
      version: ${{ steps.should_release.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4

      - run: npm install -g semver

      - name: Get extension manifest
        id: get_manifest
        run: echo "manifest=$(jq -c . < manifest.json)" >> "$GITHUB_OUTPUT"
        working-directory: ./extension/${{ inputs.extension-name }}

      - name: Get manifest extension version
        run: echo "MANIFEST_VERSION=$(echo ${{ steps.get_manifest.outputs.manifest }} | jq -r '.extension.version')" >> "$GITHUB_ENV"

      - name: Get lastest version
        run: |
          LATEST_VERSION=$(semver -c $(jq -c '.extensions[] | select(.name=="publisher-command-center").latestVersion.version' < extensions.json))
          echo "LATEST_VERSION=$LATEST_VERSION" >> "$GITHUB_ENV"

      - name: Check if manifest has newer version
        id: should_release
        run: |
          echo "The last released version is '$LATEST_VERSION' and the manifest version is '$MANIFEST_VERSION'"
          HIGHER_VERSION=$(semver "$MANIFEST_VERSION" "$LATEST_VERSION" | tail -n 1)
            if [ "$MANIFEST_VERSION" = "$HIGHER_VERSION" ] && [ "$MANIFEST_VERSION" != "$LATEST_VERSION" ]; then
            echo "Should release: the manifest version is higher than the lastest version"
            echo "should_release=true" >> "$GITHUB_OUTPUT"
            echo "version=$MANIFEST_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "Should not release: the manifest version is not higher than the lastest version"
            echo "should_release=false" >> "$GITHUB_OUTPUT"
          fi
