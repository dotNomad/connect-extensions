name: Release extension

on:
  workflow_call:
    inputs:
      extension-name:
        description: "The name of the extension"
        required: true
        type: string
      version:
        description: "The version of the extension to be released"
        required: true
        type: string
    secrets:
      GH_TOKEN:
        description: "GitHub token"
        required: true
    outputs:
      release:
        description: "The GitHub Release details"
        value: ${{ jobs.release.outputs.release }}

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  release:
    if: contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) && github.ref_name == 'main'
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.get_release_data.outputs.release }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.extension-name }}.tar.gz

      - name: Release tag
        run: echo "RELEASE_TAG=${{ inputs.extension-name}}@v${{ inputs.version }}" >> "$GITHUB_ENV"

      - name: Release
        run: |
          gh release create $RELEASE_TAG \
            --title "${{ inputs.extension-name }} v${{ inputs.version }}" \
            ${{ inputs.extension-name }}.tar.gz

      - name: Get release data
        id: get_release_data
        run: |
          echo "RELEASE=$(gh api /repos/${{ github.repository }}/releases/tags/$RELEASE_TAG)" >> "$GITHUB_OUTPUT"
